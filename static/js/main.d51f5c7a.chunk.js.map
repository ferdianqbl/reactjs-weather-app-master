{"version":3,"sources":["components/Card.js","App.js","reportWebVitals.js","index.js"],"names":["Card","api","useState","query","setQuery","weather","setWeather","text","setText","search","evt","key","fetch","then","res","json","result","main","Provider","value","size","color","className","type","name","placeholder","onChange","e","target","onKeyPress","sys","country","d","date","String","window","Date","slice","dateBuilder","crntWeather","iconSwitch","Math","round","temp","feels_like","wind","speed","humidity","message","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d51f5c7a.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { IconContext } from \"react-icons/lib\";\nimport { BiCloud } from \"react-icons/bi\";\nimport { WiThunderstorm } from \"react-icons/wi\";\nimport { BsCloudDrizzle } from \"react-icons/bs\";\nimport { WiRain } from \"react-icons/wi\";\nimport { BiCloudSnow } from \"react-icons/bi\";\nimport { WiDaySunny } from \"react-icons/wi\";\n\nconst Card = () => {\n  const api = {\n    key: \"53c5c1f7bd9a0b102354de4f9725b8af\",\n    base: \"https://api.openweathermap.org/data/2.5/\"\n  }\n\n  const dateBuilder = (d) => {\n    let date = String(new window.Date());\n    date = date.slice(0, 15);\n    \n    return date;\n  }\n\n  const [query, setQuery] = useState('');\n  const [weather, setWeather] = useState({});\n  const [text, setText] = useState('');\n\n  const search = evt => {\n    if(evt.key === \"Enter\")\n      fetch(`${api.base}weather?q=${query}&units=metric&APPID=${api.key}`).then(res => res.json()).then(result => {\n        setWeather(result);\n        setQuery('');\n        });\n    else {\n      setText(text);\n    }\n  }\n\n  const iconSwitch = (crntWeather) => {\n    switch(crntWeather) {\n      case 'Thunderstorm' :\n        return <WiThunderstorm className=\"mt-6 self-center inline-flex items-center justify-center\" />;\n      case 'Drizzle' :\n        return <BsCloudDrizzle className=\"mt-6 self-center inline-flex items-center justify-center\" />;\n      case 'Rain' :\n        return <WiRain className=\"mt-6 self-center inline-flex items-center justify-center\" />;\n      case 'Snow' :\n        return <BiCloudSnow className=\"mt-6 self-center inline-flex items-center justify-center\" />;\n      case 'Clear' :\n        return <WiDaySunny className=\"mt-6 self-center inline-flex items-center justify-center\" />;\n      default :\n        return <BiCloud className=\"mt-6 self-center inline-flex items-center justify-center\" />;\n    }\n  }\n\n  return (\n    <div>\n      {(typeof weather.main != \"undefined\") ? (\n        <IconContext.Provider value={{ size:\"6em\", color:\"black\" }}>\n          <div className=\"min-h-screen flex flex-col items-center justify-center\">\n            <div className=\"flex flex-col bg-white rounded-lg p-8 w-full max-w-xs border border-gray-600 border-opacity-50 filter drop-shadow-md\">\n              <div className=\"font-bold text-3xl mb-7\">Weather App</div>\n              <div className=\"mb-7 text-gray-600\">\n                <input className=\"border border-gray-600 border-opacity-50 bg-white h-10 px-5 w-full rounded-lg text-sm text-gray-500 focus:outline-none\"\n                  type=\"text\" name=\"search\" placeholder=\"Search city name...\" onChange={e => setQuery(e.target.value)} value={query} onKeyPress={search} />\n              </div>\n              <div className=\"text-sm text-500 font-bold\">{weather.sys.country}</div>\n              <div className=\"font-bold text-4xl mb-2\">{weather.name}</div>\n              <div className=\"text-sm text-gray-500\">{dateBuilder()}</div>\n              {iconSwitch(weather.weather[0].main)}\n              <div className=\"flex flex-row items-center justify-center mt-6\">\n                <div className=\"font-medium text-6xl\">{Math.round(weather.main.temp)}°c</div>\n                <div className=\"flex flex-col items-center ml-6\">\n                  <div>{weather.weather[0].main}</div>\n                  <div className=\"mt-1\">\n                    <span className=\"text-sm\">\n                      <i className=\"far fa-long-arrow-up\"></i>\n                    </span>\n                    <span className=\"text-sm font-light text-gray-500\">{Math.round(weather.main.feels_like)}°C</span>\n                  </div>\n                </div>\n              </div>\n              <div className=\"flex flex-row justify-evenly mt-6\">\n                <div className=\"flex flex-col items-center\">\n                  <div className=\"font-medium text-sm\">Wind</div>\n                  <div className=\"text-sm text-gray-500\">{Math.round(weather.wind.speed)}m/s</div>\n                </div>\n                <div className=\"flex flex-col items-center\">\n                  <div className=\"font-medium text-sm\">Humidity</div>\n                  <div className=\"text-sm text-gray-500\">{Math.round(weather.main.humidity)}%</div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </IconContext.Provider>\n      ) : (\n        <div className=\"min-h-screen flex flex-col items-center justify-center\">\n          <div className=\"flex flex-col bg-white rounded-lg p-8 w-full max-w-xs border border-gray-600 border-opacity-50 filter drop-shadow-md\">\n            <div>{text}</div>\n            <div className=\"font-bold text-3xl mb-7\">Weather App</div>\n            <div className=\"text-gray-600\">\n              <input className=\"border border-gray-600 border-opacity-50 bg-white h-10 px-5 w-full rounded-lg text-sm text-gray-500 focus:outline-none\" type=\"text\" name=\"search\" placeholder=\"Search city name...\" onChange={e => setQuery(e.target.value)} value={query} onKeyPress={search} />\n            </div>\n            {(weather.message === \"city not found\") ? (\n              <div className=\"font-semibold text-sm text-red-400 mt-7\">City not found!</div>\n            ) : ('')}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Card;","import './App.css';\nimport Card from './components/Card';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Card />\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}